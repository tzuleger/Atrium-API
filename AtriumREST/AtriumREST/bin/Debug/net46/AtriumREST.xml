<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AtriumREST</name>
    </assembly>
    <members>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController">
            <summary>
            Used to communicate with an Atrium Controller using Atrium SDK and HTTP.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.MaxAttempts">
            <summary>
            Maximum number of attempts to establish a session. (by default: 10. Maximum amount that can be set is 50.)
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.DelayBetweenAttempts">
            <summary>
            The time in seconds to wait for the next attempt to log into the controller. (by default: 10 seconds)
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.RequestText">
            <summary>
            Stores the Request XML data to the last POST request made.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.ResponseText">
            <summary>
            Stores the Response String from the last POST response received.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.EncryptedRequest">
            <summary>
            Serial number of the Atrium Controller that the AtriumController object is connected to.
            Stores the Request XML data after encryption to the last POST request made.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.EncryptedResponse">
            <summary>
            Stores the Response XML data before decryption to the last POST response received.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.SerialNumber">
            <summary>
            Serial number of the Atrium Controller that the AtriumConnection object is connected to.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.ProductName">
            <summary>
            Product name of the Atrium Controller that the AtriumController object is connected to.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.ProductLabel">
            <summary>
            Product label of the Atrium Controller that the AtriumController object is connected to.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.ProductVersion">
            <summary>
            Product version of the Atrium Controller that the AtriumController object is connected to.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.SessionID">
            <summary>
            Session ID of the Atrium Controller that the AtriumController object is connected to.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.GenerateGuid">
            <summary>
            Generates a random Guid (128-bit ID) in the format of "########-####-####-####-############".
            This should never be the same string when called.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates an AtriumController object connected to the specified address under the specified username and password.
            </summary>
            <param name="username">Username to log in as.</param>
            <param name="password">Password to log into Atrium under specified username</param>
            <param name="address">Atrium Controller Address to connect to</param>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.Close">
            <summary>
            Closes the AtriumController's connection. If this function is called, the connection cannot be reopened.
            </summary>
            <returns>Boolean indicating whether the Controller closed the connection or not.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.ACCESS_LEVELS(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an integer array of the 5 integer arguments. If an argument is not provided, then that Access Level is ignored.
            </summary>
            <param name="al1">Integer that represents the Object ID for an Access Level. By default: -1 for no access level</param>
            <param name="al2">Integer that represents the Object ID for an Access Level. By default: -1 for no access level</param>
            <param name="al3">Integer that represents the Object ID for an Access Level. By default: -1 for no access level</param>
            <param name="al4">Integer that represents the Object ID for an Access Level. By default: -1 for no access level</param>
            <param name="al5">Integer that represents the Object ID for an Access Level. By default: -1 for no access level</param>
            <returns></returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.To26BitCardNumber(System.Int32,System.Int32)">
            <summary>
            Converts two 32-bit integers into one 26-bit integer. Specifically used for converting a Family Number and Member Number into
            it's 26-bit variant, where the Family Number is the upper 10 bits and the Member Number is the lower 16 bits.
            </summary>
            <param name="familyNumber">10-bit Int32 that corresponds to the Family Number on the card.</param>
            <param name="memberNumber">16-bit Int32 that corresponds to the Member Number that belongs to the related family.</param>
            <returns>26-bit integer directly converted from the family number bits concatenated with the member number bits.
            If family number or member number is less than 0, then -1 is returned.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.CHECK_ENCRYPTION(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tests for Encryption given the Session ID, Serial Number, XML (or data to encrypt), username (optional), and password (optional).
            </summary>
            <param name="sid"></param>
            <param name="sno"></param>
            <param name="xml"></param>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.GetAllCards(System.Int32)">
            <summary>
            Gets all Users that exist in the Atrium database in increments. Best used when the number of Users in the database is unknown.
            Larger increments increases speed through HTTP but could be worse if the number of records that actually exist are on the short end of the increment.
            (e.g. 1034 records exist with a 1000 increment would force two HTTP requests searching for 2000 total records.
            An increment of 1035 or better would be best here)
            By default 100.
            </summary>
            <param name="increment">Increment of users to grab.
            Larger numbers increases speed through HTTP but could be worse if the number of records that actually exist are on the short end of the increment.
            (e.g. 1034 records exist with a 1000 increment would force two HTTP requests searching for 2000 total records.
            An increment of 1035 or better would be best here)
            By default 100.</param>
            <returns>List of all Cards that are in the Atrium Controller</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.InsertCard(System.String,System.Guid,System.Guid,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Inserts a new Card into Atrium under the provided information.
            </summary>
            <param name="displayName">Display Name that the card should be under.</param>
            <param name="cardId">Card GUID that the card should be under.</param>
            <param name="userId">User GUID that the card is attached to.</param>
            <param name="objectId">Atrium ObjectID that the Card should be attached to.</param>
            <param name="cardNum">Number of the card that is to be used.</param>
            <param name="actDate">Activation Date of the card.</param>
            <param name="expDate">Expiration Date of the card.</param>
            <returns>String object that is of real type int representing the Object ID as assigned by the Atrium Controller when card is inserted.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.InsertCard(ThreeRiversTech.Zuleger.Atrium.REST.Objects.Card)">
            <summary>
            Inserts a Card C# object into the Atrium Controller's database.
            </summary>
            <param name="card">The Card object to be inserted into the Atrium Controller's database.</param>
            <returns>String object that is of real type int representing the Object ID as assigned by the Atrium Controller when user is inserted.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.UpdateCard(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Updates a User, specified by the Atrium Controller's defined Object ID, to a new First Name, Last Name, Activation Date, and Expiration Date.
            </summary>
            <param name="objectId">Object ID, as defined by the Atrium Controller, of what User to update.</param>
            <param name="displayName">The new name to replace current Display Name on the card.</param>
            <param name="actDate">New expiration date of the User to update.</param>
            <param name="expDate">New activation date of the User to update.</param>
            <returns>Boolean indicating whether the card was successfully updated or not.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.UpdateCard(ThreeRiversTech.Zuleger.Atrium.REST.Objects.Card)">
            <summary>
            Updates a User given a C# Card Object. Object ID must already exist in the database.
            </summary>
            <param name="card">Card object to update</param>
            <returns>Boolean indicating whether the card was updated successfully or not.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.GetAllUsers(System.Int32)">
            <summary>
            Gets all Users that exist in the Atrium database in increments. Best used when the number of Users in the database is unknown.
            Larger increments increases speed through HTTP but could be worse if the number of records that actually exist are on the short end of the increment.
            (e.g. 1034 records exist with a 1000 increment would force two HTTP requests searching for 2000 total records.
            An increment of 1035 or better would be best here)
            By default 100.
            </summary>
            <param name="increment">Increment of users to grab.
            Larger numbers increases speed through HTTP but could be worse if the number of records that actually exist are on the short end of the increment.
            (e.g. 1034 records exist with a 1000 increment would force two HTTP requests searching for 2000 total records.
            An increment of 1035 or better would be best here)
            By default 100.</param>
            <returns>List of all Users that are in the Atrium Controller</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.InsertUser(System.String,System.String,System.Guid,System.DateTime,System.DateTime,System.Int32[])">
            <summary>
            Inserts a new User into the Atrium Controller with the provided information.
            </summary>
            <param name="firstName">First name of the user to be inserted.</param>
            <param name="lastName">Last name of the user to be inserted.</param>
            <param name="id">User GUID that is to be attached to the user.</param>
            <param name="actDate">Activation date of the User.</param>
            <param name="expDate">Expiration date of the User.</param>
            <param name="accessLevels">Array of 5 integers between 0-9,999 (inclusive) that represent the Object ID for each Access Level.</param>
            <returns>String object that is of real type int representing the Object ID as assigned by the Atrium Controller when user is inserted.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.InsertUser(ThreeRiversTech.Zuleger.Atrium.REST.Objects.User)">
            <summary>
            Inserts a User C# object into the Atrium Controller's database.
            </summary>
            <param name="user">The User object to insert into the Atrium database.</param>
            <returns>String object that is of real type int representing the Object ID as assigned by the Atrium Controller when user is inserted.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.UpdateUser(System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32[])">
            <summary>
            Updates a User, specified by the Atrium Controller's defined Object ID, to a new First Name, Last Name, Activation Date, and Expiration Date.
            </summary>
            <param name="objectId">Object ID, as defined by the Atrium Controller, of what User to update.</param>
            <param name="firstName">New first name of the User to update.</param>
            <param name="lastName">New last name of the User to update.</param>
            <param name="actDate">New expiration date of the User to update.</param>
            <param name="expDate">New activation date of the User to update.</param>
            <param name="accessLevels">Array of 5 integers between 0-9,999 (inclusive) that represent the Object ID for each Access Level.</param>
            <returns>Boolean indicating whether the user was successfully updated or not.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.AtriumController.UpdateUser(ThreeRiversTech.Zuleger.Atrium.REST.Objects.User)">
            <summary>
            Updates a User based off an already existing User C# object.
            </summary>
            <param name="user">User object that is to be updated. (Object ID of "user" must already exist in the Controller as a User)</param>
            <returns>Boolean indicating whether the user was successfully updated or not.</returns>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Example.Example">
            <summary>
            In-depth example on how to use the Atrium API.
            </summary>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.FailedToLoginException">
            <summary>
            Thrown when the UserID returned from the second Atrium Controller Answer is -1.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.FailedToLoginException.#ctor">
            <summary>
            Thrown when a login fails where it gets past all phases but the User ID returned is "-1".
            </summary>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.HttpRequestException">
            <summary>
            Thrown when an HTTP Request fails, usually when some encryption went wrong.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.HttpRequestException.#ctor(System.String)">
            <summary>
            Thrown when an HTTP Request is made using Encryption but the Response did not contain expected Encryption variables.
            </summary>
            <param name="responseString"></param>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.IntegrityException">
            <summary>
            Thrown when integrity is invalidated when checksums are compared between remote encrypted message and remote checksum
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.IntegrityException.#ctor">
            <summary>
            Thrown when integrity is invalidated when checksums are compared between remote encrypted message and remote checksum
            </summary>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.SdkRequestException">
            <summary>
            Thrown when an SDK Request returns back with err not equaling "ok".
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.SdkRequestException.Message">
            <summary>
            Message to be printed when thrown.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.SdkRequestException.#ctor">
            <summary>
            Thrown when an SDK Request returns back with err not equaling "ok".
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Exceptions.SdkRequestException.#ctor(System.String)">
            <summary>
            Thrown when an SDK Request returns back with err not equaling "ok".
            </summary>
            <param name="errcode">Error Code that was given instead of "ok"</param>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject">
            <summary>
            The base object containing attributes that all Atrium objects have.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject.Status">
            <summary>
            
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject.ObjectId">
            <summary>
            Object ID of where the Object is located in the Atrium Controller.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject.ObjectGuid">
            <summary>
            Object's GUID.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject.EntityRelationshipId">
            <summary>
            Related Entity's Object ID.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject.EntityRelationshipGuid">
            <summary>
            Related Entity's GUID
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject.IsValid">
            <summary>
            Boolean specifying if the Object is valid in the Controller.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject.Update(ThreeRiversTech.Zuleger.Atrium.REST.Objects.AtriumObject)">
            <summary>
            Update this object's attributes to be the same as o's attributes.
            </summary>
            <param name="o"></param>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Objects.Card">
            <summary>
            Card object that resembles the appearance of Card in Atrium (and attributes)
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.Card.DisplayName">
            <summary>
            Display Name of the Card.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.Card.CardNumber">
            <summary>
            26 bit Integer where upper 10 bits is the Family number and lower 16 bits is the card number.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.Card.ActivationDate">
            <summary>
            Activation Date of the Card.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.Card.ExpirationDate">
            <summary>
            Expiration Date of the Card.
            </summary>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Objects.User">
            <summary>
            User object that resembles the appearance of User in Atrium (and attributes)
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.User.FirstName">
            <summary>
            First Name of the User.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.User.LastName">
            <summary>
            Last Name of the User.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.User.ActivationDate">
            <summary>
            Activation Date of the User.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.User.ExpirationDate">
            <summary>
            Expiration Date of the User.
            </summary>
        </member>
        <member name="P:ThreeRiversTech.Zuleger.Atrium.REST.Objects.User.AccessLevelObjectIds">
            <summary>
            Integer array (expected size of at most 5) specifying the (up to) five Levels (specification of Object ID) this User has access to.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Objects.User.ToString">
            <summary>
            Overriden ToString() to return FirstName concatenated with LastName separated by a space. (e.g. "John Doe").
            </summary>
            <returns>String of User's FirstName concatenated with LastName separated with a space.</returns>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Security.MD5">
            <summary>
            Performs MD5 hash algorithm.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Security.MD5.Hash(System.String)">
            <summary>
            Hashes the given string using MD5 algorithms.
            </summary>
            <param name="text">String to be hashed</param>
            <returns>Hashed string in hexadecimal</returns>
        </member>
        <member name="T:ThreeRiversTech.Zuleger.Atrium.REST.Security.RC4">
            <summary>
            Performs RC4 Encryption/Decryption algorithms. Also includes a CheckSum calculator.
            </summary>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Security.RC4.Encrypt(System.String,System.String)">
            <summary>
            Encrypts a given string with a given secret key. Secret key must be in hexadecimal.
            </summary>
            <param name="hexKey">Secret key to encrypt with</param>
            <param name="plaintext">String to be encrypted</param>
            <returns>Encrypted string in hexadecimal.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Security.RC4.Decrypt(System.String,System.String)">
            <summary>
            Decrypts a given string with a given secret key. String and secret key must be in hexadecimal.
            </summary>
            <param name="hexKey">Secret key to decrypt with</param>
            <param name="ciphertext">String to be decrypted</param>
            <returns>Decrypted string in ASCII</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Security.RC4.CheckSum(System.String)">
            <summary>
            Performs a Check Sum on the given string, str, where the checksum is the summation of all character codes rolling over 0xFFFF.
            </summary>
            <param name="str">String to perform the check sum on.</param>
            <returns>Returns a String formatted like "0x####" where #### is the summation of all character codes in str.</returns>
        </member>
        <member name="M:ThreeRiversTech.Zuleger.Atrium.REST.Security.RC4.toBytes(System.String)">
            Converts a hexadecimal String to an array of bytes.
        </member>
    </members>
</doc>
